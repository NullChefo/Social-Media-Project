<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

	<parent>
		<artifactId>social-media-project</artifactId>
		<groupId>com.nullchefo</groupId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

    <artifactId>authorization-service</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>authorization-service</name>
    <description>Authorization service</description>
    <properties>
        <java.version>21</java.version>
        <testcontainers.version>1.18.1</testcontainers.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <repackage.classifier>exec</repackage.classifier>
        <start-class>com.nullchefo.authorizationservice.AuthorizationServiceApplication</start-class>
    </properties>

<!--	https://start.spring.io/#!type=maven-project&language=java&platformVersion=3.1.3&packaging=jar&jvmVersion=20&groupId=com.nullchefo&artifactId=social-media-project&name=social-media-project&description=Demo%20project%20for%20Spring%20Boot&packageName=com.nullchefo.social-media-project&dependencies=native,lombok,devtools,web,cloud-resilience4j,amqp,postgresql,security,configuration-processor,actuator,validation,oauth2-authorization-server,thymeleaf,flyway,docker-compose,testcontainers,restdocs-->

	<dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-amqp</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!--		<dependency>-->
        <!--			<groupId>org.springframework.cloud</groupId>-->
        <!--			<artifactId>spring-cloud-commons</artifactId>-->
        <!--			<version>4.0.1</version>-->
        <!--			<scope>compile</scope>-->
        <!--		</dependency>-->

        <!--		<dependency>-->
        <!--			<groupId>org.springframework.boot</groupId>-->
        <!--			<artifactId>spring-boot-starter-webflux</artifactId>-->
        <!--		</dependency>-->


        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-oauth2-client</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-oauth2-authorization-server</artifactId>
            <version>1.1.1</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

        <!-- https://www.springcloud.io/post/2022-11/springboot-grafana/#gsc.tab=0 -->

        <!-- <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-exporter-zipkin</artifactId>
        </dependency> -->


        <!-- https://spring.io/blog/2022/10/12/observability-with-spring-boot-3 -->
        <!-- <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-tracing-bridge-brave</artifactId>
        </dependency>

        <dependency>
            <groupId>io.zipkin.reporter2</groupId>
            <artifactId>zipkin-reporter-brave</artifactId>
        </dependency>

       <dependency>
            <groupId>io.opentelemetry</groupId>
            <artifactId>opentelemetry-api</artifactId>
        </dependency> -->


        <!-- Not Working loki-logback-appender and micrometer-tracing-bridge-otel -->

<!--         <dependency>
            <groupId>com.github.loki4j</groupId>
            <artifactId>loki-logback-appender</artifactId>
            <version>1.4.0</version>
        </dependency> -->


        <!--		<dependency>-->
        <!--			<groupId>io.micrometer</groupId>-->
        <!--			<artifactId>micrometer-tracing-bridge-otel</artifactId>-->
        <!--			<version>1.0.3</version>-->
        <!--		</dependency>-->




		<!--
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-tracing-bridge-brave</artifactId>
		</dependency>


		<dependency>
			<groupId>io.zipkin.reporter2</groupId>
			<artifactId>zipkin-reporter-brave</artifactId>
		</dependency>
		-->

		<!-- https://spring.io/blog/2022/10/12/observability-with-spring-boot-3 -->
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-tracing-bridge-brave</artifactId>
		</dependency>

		<dependency>
			<groupId>io.zipkin.reporter2</groupId>
			<artifactId>zipkin-reporter-brave</artifactId>
		</dependency>


		<!--         <dependency>
					<groupId>com.github.loki4j</groupId>
					<artifactId>loki-logback-appender</artifactId>
					<version>1.4.0</version>
				</dependency> -->


		<!-- https://www.springcloud.io/post/2022-11/springboot-grafana/#gsc.tab=0 -->
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>io.opentelemetry</groupId>
			<artifactId>opentelemetry-exporter-zipkin</artifactId>
		</dependency>

		<!-- OPEN_TELEMETRY
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-tracing-bridge-otel</artifactId>
		</dependency>
		-->

		<dependency>
			<groupId>io.opentelemetry</groupId>
			<artifactId>opentelemetry-api</artifactId>
		</dependency>


        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
        </dependency>


        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.15.2</version>
        </dependency>


        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>

<!--        <dependency>-->
<!--            <groupId>org.projectlombok</groupId>-->
<!--            <artifactId>lombok</artifactId>-->
<!--            <optional>true</optional>-->
<!--        </dependency>-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.projectreactor</groupId>
            <artifactId>reactor-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.amqp</groupId>
            <artifactId>spring-rabbit-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>postgresql</artifactId>
            <scope>test</scope>
        </dependency>

        <!--		<dependency>-->
        <!--			<groupId>org.testcontainers</groupId>-->
        <!--			<artifactId>rabbitmq</artifactId>-->
        <!--			<scope>test</scope>-->
        <!--		</dependency>-->

        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-core</artifactId>
        </dependency>

        <!-- https://springdoc.org/v2/ -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>2.0.4</version>
        </dependency>

    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers-bom</artifactId>
                <version>${testcontainers.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>

            <!--			<plugin>-->
            <!--				<groupId>org.hibernate.orm.tooling</groupId>-->
            <!--				<artifactId>hibernate-enhance-maven-plugin</artifactId>-->
            <!--				<version>${hibernate.version}</version>-->
            <!--				<executions>-->
            <!--					<execution>-->
            <!--						<id>enhance</id>-->
            <!--						<goals>-->
            <!--							<goal>enhance</goal>-->
            <!--						</goals>-->
            <!--						<configuration>-->
            <!--							<enableLazyInitialization>true</enableLazyInitialization>-->
            <!--							<enableDirtyTracking>true</enableDirtyTracking>-->
            <!--							<enableAssociationManagement>true</enableAssociationManagement>-->
            <!--						</configuration>-->
            <!--					</execution>-->
            <!--				</executions>-->
            <!--			</plugin>-->

            <plugin>
                <groupId>org.graalvm.buildtools</groupId>
                <artifactId>native-maven-plugin</artifactId>
            </plugin>


            <!--			<plugin>-->
            <!--				<groupId>org.apache.maven.plugins</groupId>-->
            <!--				<artifactId>maven-compiler-plugin</artifactId>-->
            <!--				<configuration>-->
            <!--					<source>19</source>-->
            <!--					<target>19</target>-->
            <!--					<compilerArgs>-->
            <!--						<arg>&#45;&#45;enable-preview</arg>-->
            <!--					</compilerArgs>-->
            <!--				</configuration>-->
            <!--			</plugin>-->

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
				<version>3.1.2</version>
                <configuration>

					<!--					<imageName>ghcr.io/nullchefo/social-media-project-${project.artifactId}:${project.version}</imageName>-->
					<imageName>${project.artifactId}:${project.version}</imageName>
					<image>
						<buildpacks>
							<buildpack>gcr.io/paketo-buildpacks/graalvm</buildpack>
							<buildpack>gcr.io/paketo-buildpacks/java-native-image</buildpack>
						</buildpacks>
						<env>
							<!-- <BP_JVM_VERSION>21.0.0</BP_JVM_VERSION> -->
							<BP_NATIVE_IMAGE>true</BP_NATIVE_IMAGE>
<!--							<BP_NATIVE_IMAGE_BUILD_ARGUMENTS>&#45;&#45;enable-preview</BP_NATIVE_IMAGE_BUILD_ARGUMENTS>-->
						</env>
					</image>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>


            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>3.3.2</version>
                <configuration>
                    <from>
                        <image>zul/zulu-openjdk-alpine:21-jre-headless-latest</image> 
                        <!-- azul/zulu-openjdk-alpine:19-jre-headless-latest -->
						<platforms>
							<platform>
								<architecture>amd64</architecture>
								<os>linux</os>
							</platform>
							<platform>
								<architecture>arm64</architecture>
								<os>linux</os>
							</platform>
						</platforms>
                    </from>
                    <to>
                        <image>ghcr.io/nullchefo/social-media-project-${project.artifactId}:${project.version}</image>
                    </to>
                    <container>
                        <mainClass>${start-class}</mainClass>
                        <!-- <user>nobody: nogroup</user> -->
                        <jvmFlags>
                            <!--							<jvmFlag>-Duser.timezone=America/Montreal</jvmFlag>-->
                            <!--							<jvmFlag>-XX:MetaspaceSize=96m </jvmFlag>-->
                            <!--							<jvmFlag>-XX:MaxMetaspaceSize=256m</jvmFlag>-->
                            <!--							<jvmFlag>-Djava.net.preferIPv4Stack=true</jvmFlag>-->
                            <!--							<jvmFlag>-Xss228k</jvmFlag>-->
                            <!--							<jvmFlag>-XX:+HeapDumpOnOutOfMemoryError</jvmFlag>-->
                            <!--							<jvmFlag>-XX:HeapDumpPath=/tmp</jvmFlag>-->


                            <!--							<jvmFlag>&#45;&#45;enable-preview</jvmFlag>-->
                        </jvmFlags>
                    </container>
                </configuration>
            </plugin>


        </plugins>
    </build>

</project>
