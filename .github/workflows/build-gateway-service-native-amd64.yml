name: Build gateway-service native

on:
  push:
    branches:
      - main
#      - dev

env:
  IMAGE_NAME: gateway
jobs:
  # Label of the container job
  deploy:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    # Service containers to run with `container-job`
    #    services:
    #      # Label used to access the service container
    #      postgres:
    #        # Docker Hub image
    #        image: postgres
    #        # Provide the password for postgres
    #        env:
    #          POSTGRES_USER: postgres
    #          POSTGRES_PASSWORD: rootpassword
    #          POSTGRES_DB: diploma-project-test
    #        # Set health checks to wait until postgres has started
    #        options: >-
    #          --health-cmd pg_isready
    #          --health-interval 10s
    #          --health-timeout 5s
    #          --health-retries 5
    #        ports:
    #          - 5432:5432

    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - uses: actions/checkout@v3
      - name: Set up JDK 19
        uses: actions/setup-java@v3
        with:
          java-version: '19'
          distribution: 'zulu'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          cache: maven

      - name: Get dependencies
        run: |
          cd back-end
          cd gateway-service
          mvn dependency:go-offline

      - name: Run tests
        run: |
          cd back-end
          cd gateway-service
          mvn test

      - name: Build with Maven
        run: |
          cd back-end
          cd gateway-service
          mvn -Pnative -Dmaven.test.skip=true -e -X spring-boot:build-image

#      - name: Build with Maven
#        # -Dmaven.test.skip=true
#        run: mvn -Pnative -e -X spring-boot:build-image
#      #        env:
#      #          # The hostname used to communicate with the PostgreSQL service container
#      #          SPRING_DATASOURCE_URL: "jdbc:postgresql://postgres:5432/diploma-project-test"
#      #          SPRING_DATASOURCE_USERNAME: "postgres"
#      #          SPRING_DATASOURCE_PASSWORD: "rootpassword"

      #Deploy the image to the Docker registry
      - name: Tag the Docker image
        run: docker tag ghcr.io/nullchefo/social-media-project-gateway-service ghcr.io/nullchefo/social-media-project-gateway-service

      - name: Tag the Docker image as native
        run: docker tag ghcr.io/nullchefo/social-media-project-gateway-service ghcr.io/nullchefo/social-media-project-gateway-service:native-latest

      - name: Push Images to Docker Registry
        run: docker push -a ghcr.io/nullchefo/social-media-project-gateway-service
